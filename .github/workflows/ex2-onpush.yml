name: Ex2 On Commit
on: push
env:
  SOME_ENV_KEY: some key value pair
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Pull code from repo.
        uses: actions/checkout/@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        working-directory: ./ex1
        run: npm ci
      - name: Lint code
        working-directory: ./ex1
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Pull code from repo.
        uses: actions/checkout/@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        working-directory: ./ex1
        run: npm ci
      - name: Test code
        id: run-tests
        working-directory: ./ex1
        run: npm run test
      - name: Upload test report
        if: steps.runTests.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Pull code from repo.
        uses: actions/checkout/@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        working-directory: ./ex1
        run: npm ci
      - name: Build code
        working-directory: ./ex1
        run: npm run build
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: ex1/dist/
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
      - name: List output content
        run: ls
      - name: Deploy
        run: |
          echo "SOME_ENV_KEY: $SOME_ENV_KEY"
          echo "SOME_SECRET_KEY: ${{ secrets.SOME_SECRET_KEY }}"
          echo "Deploying..."
